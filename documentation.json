{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-cfd744f0fd0744942f3bc1b5cab4ead0c0fa1b883e8add330272ab0373489e40c7f309b20173d67e38cf844cfd3f426f32497fc99db3eb3fe87c6a5b3b580520-1",
            "file": "src/app/shared/services/user/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  uid: string;\n  email: string;\n  displayName: string;\n  photoURL: string;\n  emailVerified: boolean;\n}\n",
            "properties": [
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "emailVerified",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "photoURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "uid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "User-1"
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-a24a68418e9272fc31fdecf76edfd1f606706efef4e0f594baa00c34f66044acc1116bc4bf0e97e370a66e0d9682d56dd5e97b025d1cdde9f319b47069b6ee3f",
            "file": "src/app/shared/services/auth/auth.service.ts",
            "properties": [
                {
                    "name": "afAuth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AngularFireAuth",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "afs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AngularFirestore",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngZone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgZone",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "userData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [
                {
                    "name": "SetUserData",
                    "args": [
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "SignIn",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "SignOut",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "SignUp",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, NgZone } from '@angular/core';\nimport { User } from '../user/user';\nimport * as auth from 'firebase/auth';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport {\n  AngularFirestore,\n  AngularFirestoreDocument,\n} from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  userData: any; // Save logged in user data\n  constructor(\n    public afs: AngularFirestore, // Inject Firestore service\n    public afAuth: AngularFireAuth, // Inject Firebase auth service\n    public router: Router,\n    public ngZone: NgZone // NgZone service to remove outside scope warning\n  ) {\n    /* Saving user data in localstorage when\n    logged in and setting up null when logged out */\n    this.afAuth.authState.subscribe((user) => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem('user', JSON.stringify(this.userData));\n        JSON.parse(localStorage.getItem('user')!);\n      } else {\n        localStorage.setItem('user', 'null');\n        JSON.parse(localStorage.getItem('user')!);\n      }\n    });\n  }\n  // Sign in with email/password\n  SignIn(email: string, password: string) {\n    return this.afAuth\n      .signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        this.ngZone.run(() => {\n          this.router.navigate(['home']);\n        });\n        this.SetUserData(result.user);\n      })\n      .catch((error) => {\n        window.alert(error.message);\n      });\n  }\n  // Sign up with email/password\n  SignUp(email: string, password: string) {\n    return this.afAuth\n      .createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        /* Call the SendVerificaitonMail() function when new user sign\n        up and returns promise */\n        this.SetUserData(result.user);\n        this.router.navigate(['home']);\n      })\n      .catch((error) => {\n        window.alert(error.message);\n      });\n  }\n  /* Setting up user data when sign in with username/password,\n  sign up with username/password and sign in with social auth\n  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service */\n  SetUserData(user: any) {\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(\n      `users/${user.uid}`\n    );\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      emailVerified: user.emailVerified,\n    };\n    return userRef.set(userData, {\n      merge: true,\n    });\n  }\n  // Sign out\n  SignOut() {\n    return this.afAuth.signOut().then(() => {\n      localStorage.removeItem('user');\n      this.router.navigate(['login']);\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "afs",
                        "type": "AngularFirestore",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "afAuth",
                        "type": "AngularFireAuth",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ngZone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "afs",
                        "type": "AngularFirestore",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "afAuth",
                        "type": "AngularFireAuth",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ngZone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LocationService",
            "id": "injectable-LocationService-7a2ee2414b0c6e8bdc993abf9145f488888f552351d3f526382e4b56f356c7967c27e014d0f9668ceb5b167dfc63ad9dc7a26f0a11639d9e558ba0baf9e96a5e",
            "file": "src/app/shared/location/location.service.ts",
            "properties": [
                {
                    "name": "apikey",
                    "defaultValue": "'b5846476df1478d322df84e6a0c1e7a0'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "callApi",
                    "args": [
                        {
                            "name": "lat",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "lng",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "lat",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "lng",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCurrentLocation",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { delay, map, Observable } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n  private apikey = 'b5846476df1478d322df84e6a0c1e7a0'\n  constructor(private http:HttpClient) { }\n\n  public getCurrentLocation(){\n    return new Promise((res:any,rej:any)=>{\n        navigator.geolocation.getCurrentPosition(res,rej)\n    })\n\n  }\n  public callApi(lat:any,lng:any){\n\n    return this.http.get(`http://api.positionstack.com/v1/reverse?access_key=${this.apikey}&query=${lat},${lng}`)\n    .pipe(map((data: any) => data.data));\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "WeatherService",
            "id": "injectable-WeatherService-a935c6b957fa19478155b1a30c21f896c2c55a720e5c816bdfb682b2a34488eba72b1b60ae3f44965f8928dfdf863c35cc4ea19c9690a4d01a6b984dd819fffb",
            "file": "src/app/shared/weather/weather.service.ts",
            "properties": [
                {
                    "name": "apikey",
                    "defaultValue": "'186a2e7cb154877d694dd8533473e44e'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "callApi",
                    "args": [
                        {
                            "name": "lat",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "lng",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "lat",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "lng",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n  private apikey = '186a2e7cb154877d694dd8533473e44e'\n  constructor(private http:HttpClient) { }\n\n  public callApi(lat:any,lng:any){\n    return this.http.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&appid=${this.apikey}&exclude=minutely,hourly,daily,alerts&units=metric`)\n      .pipe(map((data: any) => data.current));\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-6ff187ce19b4405e9fb0ee5173e658807fac300c9fee198e53b4eeb585f478ebdb5b54dc29132158aaf1aa5509ee346b467c71a25c5d9b2f9814aeae3213eb49",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'projeto-final-compass'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n\n  title = 'projeto-final-compass';\n\n  constructor(private router:Router){}\n\n  ngOnInit(): void {\n    this.router.navigate(['login'])\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<router-outlet></router-outlet>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-dc88fa0bcdc8ceb75cef1d6a26715d89a38b1cc4e36fc174565c4b1411168c0ce7a3c5ef792465d0585d9f486fe2f6fcfcf45bd567af3b65c42fbfb8d9c83cb2",
            "file": "src/app/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date",
                    "defaultValue": "`${this.dayEnum[this.rxTime.getDay()]}, ${this.rxTime.getDate()} de ${this.monthEnum[this.rxTime.getMonth()]} de ${this.rxTime.getFullYear()}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "dayEnum",
                    "defaultValue": "Day",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "internalTimer",
                    "defaultValue": "60",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "intervalId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "intervalId2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "locale",
                    "defaultValue": "'Carregando...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "localeArray",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<string>",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "monthEnum",
                    "defaultValue": "Month",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "rxTime",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "temperature",
                    "defaultValue": "'...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "time",
                    "defaultValue": "'...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "timer",
                    "defaultValue": "60",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "getWeather",
                    "args": [
                        {
                            "name": "lat",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "lng",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lat",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "lng",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "gotoGoogle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AuthService } from './../shared/services/auth/auth.service';\nimport { Router } from '@angular/router';\nimport { LocationService } from './../shared/location/location.service';\nimport { WeatherService } from './../shared/weather/weather.service';\nimport { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription, delay } from 'rxjs';\nimport { Day, Month } from '../shared/enums/date.enum'\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  public dayEnum = Day\n  public monthEnum = Month\n\n  rxTime = new Date();\n\n  intervalId:any;\n  intervalId2:any;\n\n  localeArray:Array<string> = []\n  time:any = '...'\n  date = `${this.dayEnum[this.rxTime.getDay()]}, ${this.rxTime.getDate()} de ${this.monthEnum[this.rxTime.getMonth()]} de ${this.rxTime.getFullYear()}`\n  locale = 'Carregando...'\n  temperature = '...'\n  internalTimer = 60 //in case someone inspects element and changes the timer, it would only affect the value and not change the time you can spend on the page\n  timer = 60\n\n  constructor(private authService:AuthService, private router:Router,private locationService:LocationService,private weatherService:WeatherService) { }\n\n  ngOnInit() {\n    //console.log(JSON.parse(localStorage.getItem('user') as string))\n    this.intervalId = setInterval(() => {\n      let hours = (new Date()).getHours().toString()\n      let mins = (new Date()).getMinutes().toString()\n      if(hours.length == 1){\n        hours = `0${hours}`\n      }\n      if(mins.length == 1){\n        mins = `0${mins}`\n      }\n      if(this.locale == 'undefined - undefined'){\n        this.locale = 'São Paulo - SP'\n      }\n      this.time = `${hours}:${mins}`\n\n      //timer\n      if(this.internalTimer == 0){\n        this.logOut()\n      }\n      this.internalTimer--\n      this.timer = this.internalTimer\n\n    }, 1000);\n\n    this.locationService.getCurrentLocation().then((res:any)=>{\n      console.log(res)\n      this.locationService.callApi(res.coords.latitude,res.coords.longitude).subscribe((res:any)=>{\n\n        this.locale = res[0].county + ' - ' + res[0].region_code\n\n        this.getWeather(res[0].latitude,res[0].longitude);\n      })\n    }).catch((err:any) =>{\n      this.locale = 'São Paulo - SP'\n      this.getWeather('-23.5489','-46.6388');\n    })\n\n    //this.startTimer()\n  }\n\n  ngOnDestroy(): void {\n    clearInterval(this.intervalId);\n    clearInterval(this.intervalId2);\n  }\n  logOut(){\n    this.authService.SignOut()\n  }\n  getWeather(lat:any,lng:any){\n    this.weatherService.callApi(lat,lng).subscribe((res:any)=>{\n      this.temperature = Math.round(res.temp)+'º'\n    })\n  }\n  gotoGoogle(){\n    window.location.href = 'https://www.google.com/'\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../styles.scss';\r\n.home-wrapper{\r\n\r\n  background: linear-gradient(105.96deg, #FFFFFF 0%, #F0F0F0 97.86%);\r\n  //padding-top: 25px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  max-height: 100vh!important;\r\n  justify-content: space-between;\r\n  overflow-y: hidden;\r\n\r\n\r\n}\r\n.header{\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 0 40px 0px 40px;\r\n  margin-top: 25px;\r\n  font-family: $main-font!important;\r\n  color: #222222!important;\r\n  .logo-compass{\r\n    img{\r\n      width: 150px;\r\n\r\n    }\r\n  }\r\n  .date-and-time{\r\n    h1{\r\n      font-size: 144px;\r\n      font-family: $main-font-bold;\r\n      //line-height: 182.52px;\r\n    }\r\n    h3{\r\n      text-align: center;\r\n      margin-top: -20px;\r\n    }\r\n  }\r\n  .weather-forecast{\r\n    .forecast{\r\n      display: flex;\r\n      .img{\r\n        width: 34px;\r\n      }\r\n      h2{\r\n        font-size: 48px;\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n}\r\n.main{\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .logo-ball{\r\n    width: 35%;\r\n    position: relative;\r\n    //bottom: 0px;\r\n    img{\r\n      position: absolute;\r\n      width: 100%;\r\n\r\n      bottom: -281px;\r\n\r\n      z-index: 0;\r\n      //overflow-y: hidden;\r\n    }\r\n    //overflow-y: hidden;\r\n  }\r\n  .text{\r\n    text-align: right;\r\n    margin-top: 166px;\r\n    margin-right: 134px;\r\n\r\n    h3{\r\n      color: #C12D18;\r\n      font-family: $main-font-bold;\r\n      font-size: 36px;\r\n    }\r\n    h4{\r\n      margin-bottom: 3px;\r\n      font-size: 24px;\r\n      line-height: 30px;\r\n      font-family: $main-font;\r\n    }\r\n    h2{\r\n      color: #C12D18;\r\n      font-family: $main-font-bold;\r\n      font-size: 64px;\r\n      line-height: 81px;\r\n\r\n    }\r\n  }\r\n}\r\n.footer{\r\n  display: flex;\r\n  justify-content: center;\r\n  z-index: 1;\r\n  color: #F0F0F0;\r\n  bottom: 0px;\r\n\r\n\r\n  width: 100%;\r\n  //: absolute;\r\n  background: linear-gradient(90.16deg, #33383D 0%, #1C1D20 100%);\r\n  .footer-left{\r\n    width: 50%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    p{\r\n\r\n      margin: auto 0;\r\n      margin-top: 24px;\r\n      width: 541px;\r\n      text-align: right;\r\n      font-size: 12px;\r\n      font-family: $main-font;\r\n      line-height: 15px;\r\n    }\r\n  }\r\n\r\n  img{\r\n\r\n    height: 41px;\r\n    margin: 20px;\r\n    width: 2px;\r\n  }\r\n  .footer-right{\r\n    display: flex;\r\n    width: 50%;\r\n    justify-content: space-between;\r\n    .timer-wrapper{\r\n      margin-left: 0;\r\n      display: flex;\r\n      h2{\r\n        font-family: $main-font;\r\n        margin-top: 28px;\r\n        font-size: 14px;\r\n        width: 109px;\r\n        text-align: right;\r\n      }\r\n      .timer{\r\n        font-family: $main-font-bold;\r\n        margin-left: 24px;\r\n        h1{\r\n          font-size: 48px;\r\n          text-align: center;\r\n          margin-top: 12px;\r\n        }\r\n        h3{\r\n          font-size: 14px;\r\n          text-align: center;\r\n          font-family: $main-font;\r\n          margin-top: -4px;\r\n        }\r\n      }\r\n    }\r\n    .btn-wrapper{\r\n      display: flex;\r\n      button{\r\n        width: 131px;\r\n        height: 100%;\r\n        border-radius: 0;\r\n        border-style: none;\r\n        background: none;\r\n      }\r\n      .keep-browsing-btn{\r\n        font-family: $main-font;\r\n        background-color: #FFFFFF;\r\n        padding:17px;\r\n        font-size: 12px;\r\n        color: #C13216;\r\n      }\r\n      .logout-btn{\r\n        font-family: $main-font-bold;\r\n\r\n        padding:17px;\r\n        font-size: 12px;\r\n        color: #FFFFFF;\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: 1566px){\r\n  .text{\r\n    text-align: right;\r\n    margin-top: 70px!important;\r\n    margin-right: 69px!important;\r\n\r\n    h3{\r\n      color: #C12D18;\r\n      font-family: $main-font-bold;\r\n      font-size: 24px!important;\r\n    }\r\n    h4{\r\n      margin-bottom: 3px;\r\n      font-size: 18px!important;\r\n      line-height: 20px!important;\r\n    }\r\n    h2{\r\n      color: #C12D18;\r\n      font-family: $main-font-bold;\r\n      font-size: 48px!important;\r\n      line-height: 45px!important;\r\n\r\n    }\r\n  }\r\n}\r\n// @media(max-width: 1148px){//prevents white space under page when ball starts floating\r\n//   .logo-ball{\r\n//     margin-bottom: -100px!important;\r\n//   }\r\n// }\r\n// @media(max-width: 1004px){//prevents white space under page when ball starts floating\r\n//   .logo-ball{\r\n//     margin-bottom: -80px!important;\r\n//   }\r\n// }\r\n@media (max-width: 960px){\r\n  .home-wrapper{\r\n    padding-top: 0px!important;\r\n    min-height: 100vh!important;\r\n  }\r\n  .header{\r\n    margin: 24px!important;\r\n    .logo-compass{\r\n      img{\r\n        width: 100px!important;\r\n      }\r\n    }\r\n  }\r\n  .main{\r\n    justify-content: flex-end!important;\r\n  }\r\n  .text{\r\n    margin-top: 0px!important;\r\n    margin-right: 24px!important;\r\n    margin-left: 24px!important;\r\n    h3{\r\n\r\n      font-size: 14px!important;\r\n    }\r\n    h4{\r\n      font-size: 16px!important;\r\n    }\r\n    h2{\r\n      font-size: 24px!important;\r\n      line-height: 30px!important;\r\n\r\n    }\r\n  }\r\n  .date-and-time{\r\n    display: none;\r\n  }\r\n  .logo-ball{\r\n    display: none;\r\n  }\r\n  .footer{\r\n    bottom: 0;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    height: 100%!important;\r\n    img{\r\n      display: none;\r\n    }\r\n    .footer-left{\r\n      width: 80%!important;\r\n      p{\r\n        text-align: center!important;\r\n        //margin-bottom: 24px!important;\r\n      }\r\n    }\r\n    .footer-right{\r\n      width: 100%!important;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      .timer-wrapper{\r\n        text-align: center!important;\r\n        justify-content: center!important;\r\n        h2{\r\n          width: 50%!important;\r\n        }\r\n        .timer{\r\n          width: 50%!important;\r\n        }\r\n      }\r\n      .btn-wrapper{\r\n        width: 100%!important;\r\n        margin-top: 24px;\r\n        //justify-content: space-evenly!important;\r\n        box-sizing: border-box;\r\n        button{\r\n          width: 50%!important;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "locationService",
                        "type": "LocationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "weatherService",
                        "type": "WeatherService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "locationService",
                        "type": "LocationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "weatherService",
                        "type": "WeatherService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"home-wrapper\">\n  <div class=\"header\">\n    <div class=\"logo-compass\">\n      <img src=\"../../assets/img/LogoCompasso 1.png\" alt=\"\">\n    </div>\n    <div class=\"date-and-time\">\n      <h1>{{time}}</h1>\n      <h3>{{date}}</h3>\n    </div>\n    <div class=\"weather-forecast\">\n      <div class=\"locale\">\n        <h3>{{locale}}</h3>\n      </div>\n      <div class=\"forecast\">\n        <img src=\"../../assets/svg/006-cloudy-1 1.svg\" alt=\"\">\n        <h2>{{temperature}}</h2>\n      </div>\n    </div>\n  </div>\n  <div class=\"main\">\n    <div class=\"logo-ball\">\n      <img src=\"../../assets/img/bola-LogoCompasso 1.png\" alt=\"\">\n    </div>\n    <div class=\"text\">\n      <h3>Our mission is</h3>\n      <h4>Nossa missão é</h4>\n      <h2>to transform the world</h2>\n      <h4>transformar o mundo</h4>\n      <h2>building digital experiences</h2>\n      <h4>construindo experiências digitais</h4>\n      <h2>that enable our client's growth</h2>\n      <h4>que permitam o crescimento dos nossos clientes</h4>\n    </div>\n  </div>\n  <div class=\"footer\">\n    <div class=\"footer-left\">\n      <p>Essa janela do navegador é usada para manter sua sessão de autenticação ativa. Deixe-a aberta em segundo plano e abra uma nova janela para continuar a navegar.</p>\n    </div>\n    <img src=\"../../assets/svg/Line 4.svg\" alt=\"\">\n    <div class=\"footer-right\">\n      <div class=\"timer-wrapper\">\n        <h2>Application refresh in</h2>\n        <div class=\"timer\">\n          <h1>{{timer}}</h1>\n          <h3>seconds</h3>\n        </div>\n      </div>\n      <div class=\"btn-wrapper\">\n        <button class=\"keep-browsing-btn\" (click)=\"gotoGoogle()\">Continuar navegando</button>\n        <button class=\"logout-btn\" (click)=\"logOut()\">logout</button>\n      </div>\n    </div>\n  </div>\n\n</div>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-d2061e8e1f353dc085c7cac49f1024c0dfaf3c88c88d891dc945dfebd56a5aca2023350a0aff56b671a868d3c47e2f387a48b6d10a21463775c88486bdba46a9",
            "file": "src/app/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isFull",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "isValid",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "loginForm",
                    "defaultValue": "this.fb.group({\n    userName: ['', Validators.required],\n    password: ['', Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "anim",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "un",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pw",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "un",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pw",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AuthService } from './../shared/services/auth/auth.service';\nimport { ActivatedRoute, Router, } from '@angular/router';\nimport { Component, OnInit, ViewChild, } from '@angular/core';\nimport {\n  FormBuilder,\n  NgForm,\n  Validators,\n} from '@angular/forms';\nimport { moveIcon } from './animations/move-icons';\nimport { turnYellow } from './animations/turn-yellow';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  animations: [moveIcon, turnYellow],\n})\nexport class LoginComponent {\n  isFull = false;\n  isValid = true; //should be true but changes to false when the form is created\n\n  public loginForm = this.fb.group({\n    userName: ['', Validators.required],\n    password: ['', Validators.required],\n  });\n\n  constructor(private authService:AuthService, private fb: FormBuilder, private router:Router, private route:ActivatedRoute ) {}\n\n  onSubmit() {\n    if(this.loginForm.valid)\n    this.login(this.loginForm.get('userName')?.value as string, this.loginForm.get('password')?.value as string)\n    //this.router.navigate(['home'])\n  }\n\n  login(un:string,pw:string){\n    this.authService.SignIn(un,pw)\n  }\n  anim() {\n    if ((this.loginForm.value.userName || this.loginForm.value.password)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  validate(){\n    if(this.loginForm.touched)\n    this.isValid = this.loginForm.valid\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles.scss\";\r\n\r\n.login-page{\r\n  display: flex;\r\n  background: linear-gradient(to bottom, #33383D,#1c1d20);\r\n\r\n  .login-block{\r\n    font-family: $main-font;\r\n    width: 50%;\r\n    display: flex!important;\r\n    flex-direction: column!important;\r\n    align-items: center!important;\r\n\r\n    color: #e0e0e0;\r\n\r\n    .message-block{\r\n      img{\r\n        display: none;\r\n      }\r\n      h1{\r\n        font-size: 60px;\r\n        line-height: 76px;\r\n        font-weight: 400;\r\n        margin-top: 135px;\r\n      }\r\n      p{\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n        line-height: 20px;\r\n        width: 301px;\r\n        margin-top: 17px;\r\n      }\r\n\r\n\r\n    }\r\n    .login-form{\r\n\r\n      margin-top: 135px;\r\n\r\n      h2{\r\n        font-size: 30px;\r\n        line-height: 38px;\r\n\r\n      }\r\n      .input-and-icon{\r\n        position: relative;\r\n        margin-top: 32px;\r\n        input{\r\n          padding: 20px;\r\n          padding-right: 20px;\r\n          background-color: #26292c;\r\n          border: 1px solid #FFFFFF;\r\n          border-radius: 50px;\r\n          font: 16px;\r\n          color: #e0e0e0;\r\n          font-family: $main-font;\r\n          width: 337px; //not sure what is going on here, but 379 px wouldn't wouldn't work\r\n        }\r\n        img{\r\n          position: absolute;\r\n          margin: 18px\r\n        }\r\n        .password:not(:placeholder-shown){\r\n          letter-spacing: 10px;\r\n\r\n        }\r\n      }\r\n      .invalid-credentials-message{\r\n        width: 283px;\r\n        font-size: 16px;\r\n        font-weight: 700;\r\n        color: #e9b425;\r\n        text-align: center;\r\n        line-height: 20px;\r\n        border-top: 28px;\r\n        margin-left: 46px;\r\n        margin-top: 28px;\r\n        position: absolute;\r\n\r\n      }\r\n      .submit-button{\r\n        margin-top: 115px;\r\n        padding: 20px;\r\n        background: linear-gradient(to right, #FF2D04,#C13216);\r\n        box-shadow: inset 5px 5px 15px rgba(0, 0, 0, 0.15);\r\n        border: none;\r\n        border-radius: 50px;\r\n        font-weight: 700;\r\n        text-align: center;\r\n        color: #e0e0e0;\r\n        font-family: $main-font;\r\n        width: 379px;\r\n        filter: drop-shadow(5px 5px 15px rgba(0, 0, 0, 0.5));\r\n      }\r\n      .register{\r\n        margin-top: 24px;\r\n        display:flex;\r\n        justify-content: center;\r\n        p{\r\n          margin-right: 6px;\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n  .image-block{\r\n    width: 50%;\r\n    .image-background{\r\n      position: relative;\r\n      .bg{\r\n        height: 100vh;\r\n        width: 100%;\r\n        object-fit: cover;\r\n      }\r\n      .logo-overlay{\r\n        width: 100%;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        margin-top: 35px;\r\n        div{\r\n          display: flex;\r\n          justify-content: center;\r\n          img{\r\n            width: 306px;\r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n@media(max-width: 1366px){\r\n  .message-block {\r\n    h1{\r\n      margin-top: 30px!important;\r\n    }\r\n  }\r\n  .login-form{\r\n    margin-top: 30px!important;\r\n  }\r\n}\r\n@media(max-width: 960px){\r\n  .message-block{\r\n    .img-wrapper-logo{\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n    img{\r\n      display: block!important;\r\n      width: 75%;\r\n      max-width: 300px;\r\n    }\r\n    p{\r\n      width: 100%!important;\r\n    }\r\n  }\r\n  .login-page{\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  input{\r\n\r\n    width: 100%!important;\r\n    //margin-right: px!important;\r\n  }\r\n  .submit-button{\r\n    margin-top: 36px!important;\r\n  }\r\n\r\n  .input-and-icon{\r\n    position:inherit!important;\r\n    width: 100%!important;\r\n    box-sizing: border-box!important;\r\n    padding-right: 40px;\r\n    img{\r\n      display: none;\r\n    }\r\n    input{\r\n      width: 100%!important;\r\n    }\r\n\r\n    .label1 {\r\n      position: relative;\r\n    }\r\n\r\n    .label1:before {\r\n      content: \"\";\r\n      position: absolute;\r\n      right: 20px;\r\n      top: 0;\r\n      bottom: 0;\r\n      width: 20px;\r\n      background: url(\"../../assets/svg/user-icon.svg\") center / contain no-repeat;\r\n    }\r\n    .label2 {\r\n      position: relative;\r\n    }\r\n\r\n    .label2:before {\r\n      content: \"\";\r\n      position: absolute;\r\n      right: 20px;\r\n      top: 0;\r\n      bottom: 0;\r\n      width: 20px;\r\n      background: url(\"../../assets/svg/padlock-icon.svg\") center / contain no-repeat;\r\n    }\r\n\r\n  }\r\n  .login-block{\r\n    min-height: 100vh;\r\n    display: flex;\r\n    width: 100%!important;\r\n    box-sizing: border-box;\r\n    padding: 30px;\r\n    .login-block-wrapper{\r\n      width: 100%;\r\n      box-sizing: border-box;\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n  }\r\n  .image-block{\r\n    display: none;\r\n  }\r\n  .invalid-credentials-message{\r\n    width: 100%!important;\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    color: #e9b425;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    border-top: 28px;\r\n    margin-left:0px!important;\r\n    margin-top: 28px;\r\n    position: relative!important;\r\n    margin-bottom: -15px;\r\n\r\n  }\r\n}\r\n@media(max-width: 342px){\r\n  .register{\r\n    flex-direction: column;\r\n    align-items: center;\r\n    p{\r\n      margin-bottom: 6px;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"login-page\">\n  <div class=\"login-block\">\n    <div class=\"login-block-wrapper\">\n      <div class=\"message-block\">\n        <div class=\"img-wrapper-logo\">\n          <img src=\"../../assets/img/Logo-Compasso-Branco-hor 1.png\" />\n        </div>\n        <h1>Olá,</h1>\n        <p>Para continuar navegando de forma segura, efetue o login na rede.</p>\n      </div>\n      <form class=\"login-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n        <h2>Login</h2>\n        <div class=\"input-and-icon\">\n          <label class=\"label1\">\n            <input\n            type=\"text\"\n            id=\"userName\"\n            placeholder=\"Usuário\"\n            formControlName=\"userName\"\n            (change)=\"isFull =  anim()\"\n            (blur)=\"isFull = (this.loginForm.value.userName || this.loginForm.value.password)? true : false\"\n            (focus)=\"isFull = true\"\n            (focus)=\"validate()\"\n            (blur)=\"validate()\"\n            [@turnYellow] = \"isValid? 'enter' : 'leave'\"\n            />\n          </label>\n          <img [@turnYellow] = \"isValid? 'enter' : 'leave'\" [@moveIcon] = \"isFull? 'enter' : 'leave'\" src=\"../../assets/svg/user-icon.svg\" alt=\"icone do usuario\" />\n        </div>\n        <div class=\"input-and-icon\">\n          <label class=\"label2\">\n            <input\n            class=\"password\"\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"Senha\"\n            formControlName=\"password\"\n            (change)=\"isFull = anim()\"\n            (blur)=\"isFull = (this.loginForm.value.userName || this.loginForm.value.password)? true : false\"\n            (focus)=\"isFull = true\"\n            (focus)=\"validate()\"\n            (blur)=\"validate()\"\n            [@turnYellow] = \"isValid? 'enter' : 'leave'\"\n          />\n          </label>\n          <img [@turnYellow] = \"isValid? 'enter' : 'leave'\"  [@moveIcon] = \"isFull? 'enter' : 'leave'\" src=\"../../assets/svg/padlock-icon.svg\" alt=\"icone da senha\" />\n        </div>\n        <div\n          class=\"invalid-credentials-message\"\n          *ngIf=\"((loginForm.get('userName')?.touched || loginForm.get('password')?.touched) && loginForm.get('userName')?.errors?.['required']) || ((loginForm.get('userName')?.touched || loginForm.get('password')?.touched) && loginForm.get('password')?.errors?.['required'])\"\n        >\n          <span>Ops, usuário ou senha inválidos, tente novamente</span>\n        </div>\n        <input type=\"submit\" class=\"submit-button\" value=\"continuar\" />\n        <div class=\"register\">\n          <p>Não possui uma conta?</p><a [routerLink]=\"['../register']\">Cadastre-se</a>\n        </div>\n      </form>\n    </div>\n  </div>\n  <div class=\"image-block\">\n    <div class=\"image-background\">\n      <img class=\"bg\" src=\"../../assets/img/background-login.png\" />\n      <div class=\"logo-overlay\">\n        <div>\n          <img src=\"../../assets/img/Logo-Compasso-Branco-hor 1.png\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "RegisterComponent",
            "id": "component-RegisterComponent-06e9947f008b7df6757dc8d01738339a3384bfb6c343cc46b93ed4cd60cb4296a181877b08a93079e03dec909362a1dbb530f45d0e54bd71d679527d6d6ca729",
            "file": "src/app/register/register.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register",
            "styleUrls": [
                "./register.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./register.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "confirmPassword",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "password",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "userName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hasLower",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "hasNumber",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "hasSpecial",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "hasUpper",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "isFull",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isLongEnough",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "isValid",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "registerForm",
                    "defaultValue": "this.fb.group({\n    userName: ['',\n     Validators.compose([\n      Validators.required,\n      Validators.email\n     ])\n    ],\n    password: ['',\n      Validators.compose([\n        Validators.required,\n        Validators.minLength(6),\n        hasLowerCase,\n        hasUpperCase,\n        hasNumber,\n        hasSpecialCharacters\n      ])\n    ],\n    confirmPassword: ['', Validators.required]\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "anim",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logErrors",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "register",
                    "args": [
                        {
                            "name": "un",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pw",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "un",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pw",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Router, RouterModule } from '@angular/router';\nimport { AuthService } from './../shared/services/auth/auth.service';\nimport { turnTextGreen } from './../login/animations/turn-text-green';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { turnYellow } from '../login/animations/turn-yellow';\nimport { turnGreen } from '../login/animations/turn-green';\nimport { moveIcon } from '../login/animations/move-icons';\nimport { hasLowerCase, hasNumber, hasSpecialCharacters, hasUpperCase } from '../shared/validators/regex-validators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n  animations: [moveIcon, turnYellow, turnGreen, turnTextGreen],\n})\nexport class RegisterComponent {\n  public isFull:boolean = false\n  public isValid:boolean = true\n  public errMessage:string = ''\n\n  hasUpper = false\n  hasLower = false\n  hasNumber = false\n  hasSpecial = false\n  isLongEnough = false\n\n  @Input() userName: string = '';\n  @Input() password: string = '';\n  @Input() confirmPassword: string = '';\n\n  public registerForm = this.fb.group({\n    userName: ['',\n     Validators.compose([\n      Validators.required,\n      Validators.email\n     ])\n    ],\n    password: ['',\n      Validators.compose([\n        Validators.required,\n        Validators.minLength(6),\n        hasLowerCase,\n        hasUpperCase,\n        hasNumber,\n        hasSpecialCharacters\n      ])\n    ],\n    confirmPassword: ['', Validators.required]\n  });\n\n  constructor(private router:Router, private authService:AuthService, private fb: FormBuilder) { }\n\n  onSubmit(){\n    if(this.registerForm.get('password')?.value == this.registerForm.get('confirmPassword')?.value){\n      if(this.registerForm.valid){\n        this.register(this.registerForm.get('userName')?.value as string, this.registerForm.get('password')?.value as string)\n      }\n    }\n  }\n\n  register(un:string,pw:string){\n    this.authService.SignUp(un,pw)\n  }\n\n  anim() {\n    if ((this.registerForm.value.userName || this.registerForm.value.password || this.registerForm.value.confirmPassword)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  validate(){\n    if(this.registerForm.touched){\n      this.isValid = this.registerForm.valid\n      if(this.registerForm.get('password')?.value != this.registerForm.get('confirmPassword')?.value){\n        this.isValid = false\n      }\n    }\n  }\n  logErrors(){\n    this.hasUpper = this.registerForm.get('password')?.errors?.['hasUpperCase']? false : true\n    this.hasLower = this.registerForm.get('password')?.errors?.['hasLowerCase']? false : true\n    this.hasNumber = this.registerForm.get('password')?.errors?.['hasNumber']? false : true\n    this.hasSpecial = this.registerForm.get('password')?.errors?.['hasSpecialCharacters']? false : true\n    this.isLongEnough = this.registerForm.get('password')?.errors?.['minlength']? false : true\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles.scss\";\r\n\r\n.login-page{\r\n  display: flex;\r\n  background: linear-gradient(to bottom, #33383D,#1c1d20);\r\n\r\n  .login-block{\r\n    font-family: $main-font;\r\n    width: 50%;\r\n    display: flex!important;\r\n    flex-direction: column!important;\r\n    align-items: center!important;\r\n\r\n    color: #e0e0e0;\r\n\r\n    .message-block{\r\n      img{\r\n        display: none;\r\n      }\r\n      h1{\r\n        font-size: 60px;\r\n        line-height: 76px;\r\n        font-weight: 400;\r\n        margin-top: 135px;\r\n      }\r\n      p{\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n        line-height: 20px;\r\n        width: 301px;\r\n        margin-top: 17px;\r\n      }\r\n\r\n\r\n    }\r\n    .login-form{\r\n\r\n      margin-top: 155px;\r\n\r\n      h2{\r\n        font-size: 30px;\r\n        line-height: 38px;\r\n\r\n      }\r\n      .input-and-icon{\r\n        position: relative;\r\n        margin-top: 32px;\r\n        input{\r\n          //box-sizing: border-box;\r\n          padding: 20px;\r\n          //padding-right: 2px;\r\n          background-color: #26292c;\r\n          border: 1px solid #FFFFFF;\r\n          border-radius: 50px;\r\n          font: 16px;\r\n          color: #e0e0e0;\r\n          font-family: $main-font;\r\n          width: 337px; //not sure what is going on here, but 379 px wouldn't wouldn't work\r\n        }\r\n        img{\r\n          position: absolute;\r\n          margin: 18px\r\n        }\r\n        .password:not(:placeholder-shown){\r\n          letter-spacing: 10px;\r\n\r\n        }\r\n      }\r\n      .password-validation{\r\n        margin: 24px;\r\n        div{\r\n          display: flex;\r\n        }\r\n        h4{\r\n          margin: 4px;\r\n          height: 24px;\r\n\r\n\r\n        }\r\n      }\r\n\r\n      .invalid-credentials-message{\r\n        width: 283px;\r\n        font-size: 16px;\r\n        font-weight: 700;\r\n        color: #e9b425;\r\n        text-align: center;\r\n        line-height: 20px;\r\n        border-top: 28px;\r\n        margin-left: 46px;\r\n        margin-top: 28px;\r\n        position: absolute;\r\n\r\n      }\r\n      .submit-button{\r\n        margin-top: 32px;\r\n        padding: 20px;\r\n        background: linear-gradient(to right, #FF2D04,#C13216);\r\n        box-shadow: inset 5px 5px 15px rgba(0, 0, 0, 0.15);\r\n        border: none;\r\n        border-radius: 50px;\r\n        font-weight: 700;\r\n        text-align: center;\r\n        color: #e0e0e0;\r\n        font-family: $main-font;\r\n        width: 379px;\r\n        filter: drop-shadow(5px 5px 15px rgba(0, 0, 0, 0.5));\r\n      }\r\n      .register{\r\n        margin-top: 24px;\r\n        display:flex;\r\n        justify-content: center;\r\n        p{\r\n          margin-right: 6px;\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n  .image-block{\r\n    width: 50%;\r\n    box-sizing: border-box;\r\n    .image-background{\r\n      position: relative;\r\n      height: 100%;\r\n      .bg{\r\n        //box-sizing: border-box;\r\n        height: 100%;\r\n        width: 100%;\r\n        object-fit: cover;\r\n        //height: auto;\r\n      }\r\n      .logo-overlay{\r\n        width: 100%;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        margin-top: 35px;\r\n        div{\r\n          display: flex;\r\n          justify-content: center;\r\n          img{\r\n            width: 306px;\r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n@media(max-width: 1366px){\r\n  .message-block {\r\n    h1{\r\n      margin-top: 30px!important;\r\n    }\r\n  }\r\n  .login-form{\r\n    margin-top: 70px!important;\r\n  }\r\n}\r\n@media(max-width: 960px){\r\n  .message-block{\r\n    .img-wrapper-logo{\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n    img{\r\n      display: block!important;\r\n      width: 75%;\r\n      max-width: 300px;\r\n    }\r\n    p{\r\n      width: 100%!important;\r\n    }\r\n  }\r\n  .login-page{\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  input{\r\n\r\n    width: 100%!important;\r\n    //margin-right: px!important;\r\n  }\r\n  .submit-button{\r\n    margin-top: 36px!important;\r\n  }\r\n\r\n  .input-and-icon{\r\n    position:inherit!important;\r\n    width: 100%!important;\r\n    box-sizing: border-box!important;\r\n    padding-right: 40px;\r\n    img{\r\n      display: none;\r\n    }\r\n    input{\r\n      width: 100%!important;\r\n    }\r\n\r\n    .label1 {\r\n      position: relative;\r\n    }\r\n\r\n    .label1:before {\r\n      content: \"\";\r\n      position: absolute;\r\n      right: 20px;\r\n      top: 0;\r\n      bottom: 0;\r\n      width: 20px;\r\n      background: url(\"../../assets/svg/user-icon.svg\") center / contain no-repeat;\r\n    }\r\n    .label2 {\r\n      position: relative;\r\n    }\r\n\r\n    .label2:before {\r\n      content: \"\";\r\n      position: absolute;\r\n      right: 20px;\r\n      top: 0;\r\n      bottom: 0;\r\n      width: 20px;\r\n      background: url(\"../../assets/svg/padlock-icon.svg\") center / contain no-repeat;\r\n    }\r\n\r\n  }\r\n  .login-block{\r\n    min-height: 100vh;\r\n    display: flex;\r\n    width: 100%!important;\r\n    box-sizing: border-box;\r\n    padding: 30px;\r\n    .login-block-wrapper{\r\n      width: 100%;\r\n      box-sizing: border-box;\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n  }\r\n  .image-block{\r\n    display: none;\r\n  }\r\n  .invalid-credentials-message{\r\n    width: 100%!important;\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    color: #e9b425;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    border-top: 28px;\r\n    margin-left:0px!important;\r\n    margin-top: 28px;\r\n    position: relative!important;\r\n    margin-bottom: -15px;\r\n\r\n  }\r\n}\r\n\r\n@media(max-width: 342px){\r\n  .register{\r\n    flex-direction: column;\r\n    align-items: center;\r\n    p{\r\n      margin-bottom: 6px;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n",
                    "styleUrl": "./register.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 50,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"login-page\">\n  <div class=\"login-block\">\n    <div class=\"login-block-wrapper\">\n      <div class=\"message-block\">\n        <div class=\"img-wrapper-logo\">\n          <img src=\"../../assets/img/Logo-Compasso-Branco-hor 1.png\" />\n        </div>\n      </div>\n      <form class=\"login-form\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n        <h2>Registrar</h2>\n        <div class=\"input-and-icon\">\n          <label class=\"label1\">\n            <input\n            type=\"text\"\n            id=\"userName\"\n            placeholder=\"Usuário\"\n            formControlName=\"userName\"\n            (change)=\"isFull = anim()\"\n            (blur)=\"isFull = (this.registerForm.value.userName || this.registerForm.value.password|| this.registerForm.value.confirmPassword)? true : false\"\n            (focus)=\"isFull = true\"\n            (focus)=\"validate();\"\n            (blur)=\"validate();\"\n            (input)=\"logErrors()\"\n            [@turnYellow] = \"isValid? 'enter' : 'leave'\"\n            />\n          </label>\n          <img [@turnYellow] = \"isValid? 'enter' : 'leave'\" [@moveIcon] = \"isFull? 'enter' : 'leave'\" src=\"../../assets/svg/user-icon.svg\" alt=\"icone do usuario\" />\n        </div>\n        <div class=\"password-validation\"\n          *ngIf=\"registerForm.get('userName')?.errors?.['email'] && registerForm.get('userName')?.touched\"\n         >\n          <h4>Insira um endereço de email válido</h4>\n        </div>\n        <div class=\"password-validation\"\n          *ngIf=\"registerForm.get('userName')?.errors?.['required'] && registerForm.get('userName')?.touched\"\n         >\n          <h4>Este campo é obrigatório</h4>\n        </div>\n        <div class=\"input-and-icon\">\n          <label class=\"label2\">\n            <input\n            class=\"password\"\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"Senha\"\n            formControlName=\"password\"\n            (change)=\"isFull = anim()\"\n            (blur)=\"isFull = (this.registerForm.value.userName || this.registerForm.value.password|| this.registerForm.value.confirmPassword)? true : false\"\n            (focus)=\"isFull = true\"\n            (focus)=\"validate();\"\n            (blur)=\"validate();\"\n            (input)=\"logErrors()\"\n            [@turnYellow] = \"isValid? 'enter' : 'leave'\"\n          />\n          </label>\n          <img [@turnYellow] = \"isValid? 'enter' : 'leave'\"  [@moveIcon] = \"isFull? 'enter' : 'leave'\" src=\"../../assets/svg/padlock-icon.svg\" alt=\"icone da senha\" />\n        </div>\n        <div class=\"password-validation\"\n          *ngIf=\"!(registerForm.get('password')?.valid) && registerForm.get('password')?.touched\"\n        >\n          <h4>Sua senha deverá conter:</h4>\n          <div\n          [@turnTextGreen] = \"(isLongEnough && registerForm.get('password')?.value?.length)? 'enter' : 'leave'\"\n          >\n          <mat-icon class=\"icon-clear\"\n            *ngIf=\"registerForm.get('password')?.errors?.['minlength'] || !registerForm.get('password')?.value?.length\"\n          >clear</mat-icon>\n          <mat-icon class=\"icon-check\"\n          *ngIf=\"!registerForm.get('password')?.errors?.['minlength'] && registerForm.get('password')?.value?.length\"\n          >check</mat-icon>\n          <h4>Ao menos 6 Caracteres</h4></div>\n          <div\n          [@turnTextGreen] = \"hasUpper ? 'enter' : 'leave'\"\n          >\n            <mat-icon class=\"icon-clear\"\n            *ngIf=\"registerForm.get('password')?.errors?.['hasUpperCase']\"\n            >clear</mat-icon>\n            <mat-icon class=\"icon-check\"\n            *ngIf=\"!registerForm.get('password')?.errors?.['hasUpperCase']\"\n            >check</mat-icon>\n            <h4>Uma letra maiúscula</h4>\n          </div>\n          <div\n          [@turnTextGreen] = \"hasLower? 'enter' : 'leave'\"\n          >\n          <mat-icon class=\"icon-clear\"\n          *ngIf=\"registerForm.get('password')?.errors?.['hasLowerCase']\"\n          >clear</mat-icon>\n          <mat-icon class=\"icon-check\"\n          *ngIf=\"!registerForm.get('password')?.errors?.['hasLowerCase']\"\n          >check</mat-icon>\n          <h4>Uma letra minúscula</h4></div>\n          <div\n          [@turnTextGreen] = \"hasNumber? 'enter' : 'leave'\"\n          >\n          <mat-icon class=\"icon-clear\"\n          *ngIf=\"registerForm.get('password')?.errors?.['hasNumber']\"\n          >clear</mat-icon>\n          <mat-icon class=\"icon-check\"\n          *ngIf=\"!registerForm.get('password')?.errors?.['hasNumber']\"\n          >check</mat-icon>\n          <h4>Um número</h4></div>\n          <div\n          [@turnTextGreen] = \"hasSpecial? 'enter' : 'leave'\"\n          >\n          <mat-icon class=\"icon-clear\"\n          *ngIf=\"registerForm.get('password')?.errors?.['hasSpecialCharacters']\"\n          >clear</mat-icon>\n          <mat-icon class=\"icon-check\"\n          *ngIf=\"!registerForm.get('password')?.errors?.['hasSpecialCharacters']\"\n          >check</mat-icon>\n          <h4>Um caractere especial</h4></div>\n        </div>\n        <div class=\"input-and-icon\">\n          <label class=\"label2\">\n            <input\n            class=\"password\"\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"Confirmar senha\"\n            formControlName=\"confirmPassword\"\n            (change)=\"isFull = anim()\"\n            (blur)=\"isFull = (this.registerForm.value.userName || this.registerForm.value.password || this.registerForm.value.confirmPassword)? true : false\"\n            (focus)=\"isFull = true\"\n            (focus)=\"validate();\"\n            (blur)=\"validate();\"\n            (input)=\"logErrors()\"\n            [@turnYellow] = \"isValid? 'enter' : 'leave'\"\n          />\n          </label>\n          <img [@turnYellow] = \"isValid? 'enter' : 'leave'\"  [@moveIcon] = \"isFull? 'enter' : 'leave'\" src=\"../../assets/svg/padlock-icon.svg\" alt=\"icone da senha\" />\n        </div>\n        <div class=\"password-validation\"\n          *ngIf=\"registerForm.get('password')?.value != registerForm.get('confirmPassword')?.value && registerForm.get('confirmPassword')?.touched\"\n         >\n          <h4>As senhas não coincidem</h4>\n        </div>\n\n        <input type=\"submit\" class=\"submit-button\" value=\"continuar\" />\n        <div class=\"register\">\n          <p>Já possui uma conta?</p> <a [routerLink]=\"['../login']\">Fazer login</a>\n        </div>\n      </form>\n    </div>\n  </div>\n  <div class=\"image-block\">\n    <div class=\"image-background\">\n      <img class=\"bg\" src=\"../../assets/img/background-login.png\" />\n      <div class=\"logo-overlay\">\n        <div>\n          <img src=\"../../assets/img/Logo-Compasso-Branco-hor 1.png\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-c99edd946d30eb770fe82a2c7327addfa1b3d92c57a3514fdee36ad88d177caba6d782ec892c20db6104376b080dd64da4215195236582a02b195a27fedc9f57",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { RegisterModule } from './register/register.module';\nimport { LoginModule } from './login/login.module';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeModule } from './home/home.module';\nimport { HttpClientModule } from '@angular/common/http'\nimport { GoogleMapsModule } from '@angular/google-maps';\nimport { MatIconModule } from '@angular/material/icon'\n\nimport { AngularFireModule } from '@angular/fire/compat';\nimport { AngularFireAuthModule } from '@angular/fire/compat/auth';\nimport { AngularFireStorageModule } from '@angular/fire/compat/storage';\nimport { AngularFirestoreModule } from '@angular/fire/compat/firestore';\nimport { AngularFireDatabaseModule } from '@angular/fire/compat/database';\nimport { environment } from '../environments/environment';\nimport { AuthService } from './shared/services/auth/auth.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    LoginModule,\n    HomeModule,\n    RegisterModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    GoogleMapsModule,\n    MatIconModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    AngularFireStorageModule,\n    AngularFireDatabaseModule,\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "HomeModule"
                        },
                        {
                            "name": "LoginModule"
                        },
                        {
                            "name": "RegisterModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-18b5e3eccbeb6fc75c33a8e5bb2c532c77a1d37fb3484ad0edf87d28c78350cbf767849359b5720617abced344689c6f1695d5e20b0e032a882f52de9b4cdc1b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {path:'login',component:LoginComponent},\n  {path:'home',component:HomeComponent},\n  {path:'register',component:RegisterComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes), ReactiveFormsModule,FormsModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeModule",
            "id": "module-HomeModule-6820e79aa6bc1c95b3a57fa9d9dcab1f3930fa8e7d1245eb414d81a22b63155490f056bad4707b892ae6bf25e19616219b786f8d99f4e2de87683caf317b8ae3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/home/home.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\n\n\n\n@NgModule({\n  declarations: [\n    HomeComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports:[\n    HomeComponent\n  ]\n})\nexport class HomeModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoginModule",
            "id": "module-LoginModule-3188d0c7873c9bd414fad4cba4791038bfea605c12ba76dc00a25bfdcd074cbc45c62ea7c0652333d11ca4053cec12563bdf448daebc253be573f1635914e293",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/login/login.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule\n\n  ],\n  exports: [LoginComponent],\n\n})\nexport class LoginModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LoginComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LoginComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RegisterModule",
            "id": "module-RegisterModule-d12035643fe11dbfcd80c96c0c2df81d00847d73bda68b0471d5ca0961e67be9da009289dbed09d169dce6bcc1a1022d3f03150c86fcaf77f6052999ab1ad3ec",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/register/register.module.ts",
            "methods": [],
            "sourceCode": "import { RouterTestingModule } from '@angular/router/testing';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './register.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\n\n\n\n@NgModule({\n  declarations: [\n    RegisterComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    MatIconModule\n  ],\n  exports:[RegisterComponent]\n})\nexport class RegisterModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RegisterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RegisterComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  firebase: {\n    apiKey: \"AIzaSyAxhcIFsanfTbwOh7d7y6gX8FtEYrGLmlI\",\n    authDomain: \"projeto-final-ad0e2.firebaseapp.com\",\n    projectId: \"projeto-final-ad0e2\",\n    storageBucket: \"projeto-final-ad0e2.appspot.com\",\n    messagingSenderId: \"537003590198\",\n    appId: \"1:537003590198:web:b80d03ca6e22b075024e97\",\n    measurementId: \"G-Y9WXG990FG\"\n  }\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  firebase: {\n\n    apiKey: \"AIzaSyAxhcIFsanfTbwOh7d7y6gX8FtEYrGLmlI\",\n\n    authDomain: \"projeto-final-ad0e2.firebaseapp.com\",\n\n    projectId: \"projeto-final-ad0e2\",\n\n    storageBucket: \"projeto-final-ad0e2.appspot.com\",\n\n    messagingSenderId: \"537003590198\",\n\n    appId: \"1:537003590198:web:b80d03ca6e22b075024e97\",\n\n    measurementId: \"G-Y9WXG990FG\"\n\n  }\n\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "moveIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/login/animations/move-icons.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger(\r\n  'moveIcon',\r\n  [\r\n    state('enter',style({left: '320px' })),\r\n    state('leave',style({left: '380px' })),\r\n\r\n    transition(\r\n      'leave => enter',\r\n      [\r\n        animate('0.2s ease-in-out')\r\n      ]\r\n    ),\r\n    transition(\r\n      'enter => leave',\r\n      [\r\n        animate('0.2s ease-in-out')\r\n      ]\r\n    )\r\n  ]\r\n)"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "turnGreen",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/login/animations/turn-green.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger(\r\n  'turnGreen',\r\n  [\r\n    state('enter',style({borderColor: 'green'})),\r\n    state('leave',style({borderColor: 'green'})),\r\n\r\n    transition(\r\n      'leave => enter',\r\n      [\r\n        animate('0s')\r\n      ]\r\n    ),\r\n    transition(\r\n      'enter => leave',\r\n      [\r\n        animate('0s')\r\n      ]\r\n    )\r\n  ]\r\n)"
            },
            {
                "name": "turnTextGreen",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/login/animations/turn-text-green.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger(\r\n  'turnTextGreen',\r\n  [\r\n    state('enter',style({color: '#66ff00'})),\r\n    state('leave',style({color: '#e9b425'})),\r\n\r\n    transition(\r\n      'leave => enter',\r\n      [\r\n        animate('0.2s')\r\n      ]\r\n    ),\r\n    transition(\r\n      'enter => leave',\r\n      [\r\n        animate('0.2s')\r\n      ]\r\n    )\r\n  ]\r\n)"
            },
            {
                "name": "turnYellow",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/login/animations/turn-yellow.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger(\r\n  'turnYellow',\r\n  [\r\n    state('enter',style({borderColor: '#e0e0e0'})),\r\n    state('leave',style({borderColor: '#e9b425' })),\r\n\r\n    transition(\r\n      'leave => enter',\r\n      [\r\n        animate('0s')\r\n      ]\r\n    ),\r\n    transition(\r\n      'enter => leave',\r\n      [\r\n        animate('0s')\r\n      ]\r\n    )\r\n  ]\r\n)"
            }
        ],
        "functions": [
            {
                "name": "hasLowerCase",
                "file": "src/app/shared/validators/regex-validators.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "literal type | null",
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "hasNumber",
                "file": "src/app/shared/validators/regex-validators.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "literal type | null",
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "hasSpecialCharacters",
                "file": "src/app/shared/validators/regex-validators.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "literal type | null",
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "hasUpperCase",
                "file": "src/app/shared/validators/regex-validators.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "literal type | null",
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "Day",
                "childs": [
                    {
                        "name": "Domingo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Segunda-feira",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Terça-feira",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Quarta-feira",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Quinta-feira",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Sexta-feira",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Sabádo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enums/date.enum.ts"
            },
            {
                "name": "Month",
                "childs": [
                    {
                        "name": "Janeiro",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Fevereiro",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Março",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Abril",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Maio",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Junho",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Julho",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Agosto",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Setembro",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Outubro",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Novembro",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Dezembro",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enums/date.enum.ts"
            }
        ],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  firebase: {\n    apiKey: \"AIzaSyAxhcIFsanfTbwOh7d7y6gX8FtEYrGLmlI\",\n    authDomain: \"projeto-final-ad0e2.firebaseapp.com\",\n    projectId: \"projeto-final-ad0e2\",\n    storageBucket: \"projeto-final-ad0e2.appspot.com\",\n    messagingSenderId: \"537003590198\",\n    appId: \"1:537003590198:web:b80d03ca6e22b075024e97\",\n    measurementId: \"G-Y9WXG990FG\"\n  }\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  firebase: {\n\n    apiKey: \"AIzaSyAxhcIFsanfTbwOh7d7y6gX8FtEYrGLmlI\",\n\n    authDomain: \"projeto-final-ad0e2.firebaseapp.com\",\n\n    projectId: \"projeto-final-ad0e2\",\n\n    storageBucket: \"projeto-final-ad0e2.appspot.com\",\n\n    messagingSenderId: \"537003590198\",\n\n    appId: \"1:537003590198:web:b80d03ca6e22b075024e97\",\n\n    measurementId: \"G-Y9WXG990FG\"\n\n  }\n\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/login/animations/move-icons.ts": [
                {
                    "name": "moveIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/login/animations/move-icons.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger(\r\n  'moveIcon',\r\n  [\r\n    state('enter',style({left: '320px' })),\r\n    state('leave',style({left: '380px' })),\r\n\r\n    transition(\r\n      'leave => enter',\r\n      [\r\n        animate('0.2s ease-in-out')\r\n      ]\r\n    ),\r\n    transition(\r\n      'enter => leave',\r\n      [\r\n        animate('0.2s ease-in-out')\r\n      ]\r\n    )\r\n  ]\r\n)"
                }
            ],
            "src/app/login/animations/turn-green.ts": [
                {
                    "name": "turnGreen",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/login/animations/turn-green.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger(\r\n  'turnGreen',\r\n  [\r\n    state('enter',style({borderColor: 'green'})),\r\n    state('leave',style({borderColor: 'green'})),\r\n\r\n    transition(\r\n      'leave => enter',\r\n      [\r\n        animate('0s')\r\n      ]\r\n    ),\r\n    transition(\r\n      'enter => leave',\r\n      [\r\n        animate('0s')\r\n      ]\r\n    )\r\n  ]\r\n)"
                }
            ],
            "src/app/login/animations/turn-text-green.ts": [
                {
                    "name": "turnTextGreen",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/login/animations/turn-text-green.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger(\r\n  'turnTextGreen',\r\n  [\r\n    state('enter',style({color: '#66ff00'})),\r\n    state('leave',style({color: '#e9b425'})),\r\n\r\n    transition(\r\n      'leave => enter',\r\n      [\r\n        animate('0.2s')\r\n      ]\r\n    ),\r\n    transition(\r\n      'enter => leave',\r\n      [\r\n        animate('0.2s')\r\n      ]\r\n    )\r\n  ]\r\n)"
                }
            ],
            "src/app/login/animations/turn-yellow.ts": [
                {
                    "name": "turnYellow",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/login/animations/turn-yellow.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger(\r\n  'turnYellow',\r\n  [\r\n    state('enter',style({borderColor: '#e0e0e0'})),\r\n    state('leave',style({borderColor: '#e9b425' })),\r\n\r\n    transition(\r\n      'leave => enter',\r\n      [\r\n        animate('0s')\r\n      ]\r\n    ),\r\n    transition(\r\n      'enter => leave',\r\n      [\r\n        animate('0s')\r\n      ]\r\n    )\r\n  ]\r\n)"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/shared/validators/regex-validators.ts": [
                {
                    "name": "hasLowerCase",
                    "file": "src/app/shared/validators/regex-validators.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "literal type | null",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasNumber",
                    "file": "src/app/shared/validators/regex-validators.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "literal type | null",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasSpecialCharacters",
                    "file": "src/app/shared/validators/regex-validators.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "literal type | null",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasUpperCase",
                    "file": "src/app/shared/validators/regex-validators.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "literal type | null",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/shared/enums/date.enum.ts": [
                {
                    "name": "Day",
                    "childs": [
                        {
                            "name": "Domingo",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Segunda-feira",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Terça-feira",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Quarta-feira",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Quinta-feira",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Sexta-feira",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Sabádo",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enums/date.enum.ts"
                },
                {
                    "name": "Month",
                    "childs": [
                        {
                            "name": "Janeiro",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Fevereiro",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Março",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Abril",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Maio",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Junho",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Julho",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Agosto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Setembro",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Outubro",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Novembro",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Dezembro",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enums/date.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "login",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "home",
                        "component": "HomeComponent"
                    },
                    {
                        "path": "register",
                        "component": "RegisterComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/login/animations/move-icons.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "moveIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/login/animations/turn-green.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "turnGreen",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/login/animations/turn-text-green.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "turnTextGreen",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/login/animations/turn-yellow.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "turnYellow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/register/register.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/location/location.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LocationService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/user/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/validators/regex-validators.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "hasLowerCase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/validators/regex-validators.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "hasNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/validators/regex-validators.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "hasSpecialCharacters",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/validators/regex-validators.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "hasUpperCase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/weather/weather.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "WeatherService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}